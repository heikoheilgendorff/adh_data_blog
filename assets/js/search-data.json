{
  
    
        "post0": {
            "title": "Plotting data from github repo",
            "content": ". First attempt at reading some data . Let&#39;s take a look at some sample data from Our World in Data. . df.head() . End .",
            "url": "https://heikoheilgendorff.github.io/adh_data_blog/jupyter/2022/06/08/test_2.html",
            "relUrl": "/jupyter/2022/06/08/test_2.html",
            "date": " • Jun 8, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "My First Attempt at Interactive Plots",
            "content": ". Interactive plots . Take a quick look at the data . df.head() . Title US_Gross Worldwide_Gross US_DVD_Sales Production_Budget Release_Date MPAA_Rating Running_Time_min Distributor Source Major_Genre Creative_Type Director Rotten_Tomatoes_Rating IMDB_Rating IMDB_Votes . 0 The Land Girls | 146083.0 | 146083.0 | NaN | 8000000.0 | Jun 12 1998 | R | NaN | Gramercy | None | None | None | None | NaN | 6.1 | 1071.0 | . 1 First Love, Last Rites | 10876.0 | 10876.0 | NaN | 300000.0 | Aug 07 1998 | R | NaN | Strand | None | Drama | None | None | NaN | 6.9 | 207.0 | . 2 I Married a Strange Person | 203134.0 | 203134.0 | NaN | 250000.0 | Aug 28 1998 | None | NaN | Lionsgate | None | Comedy | None | None | NaN | 6.8 | 865.0 | . 3 Let&#39;s Talk About Sex | 373615.0 | 373615.0 | NaN | 300000.0 | Sep 11 1998 | None | NaN | Fine Line | None | Comedy | None | None | 13.0 | NaN | NaN | . 4 Slam | 1009819.0 | 1087521.0 | NaN | 1000000.0 | Oct 09 1998 | R | NaN | Trimark | Original Screenplay | Drama | Contemporary Fiction | None | 62.0 | 3.4 | 165.0 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) . alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, #tooltip=&#39;Title:N&#39;, tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;], opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Look at all the data without filters . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;,&#39;Major_Genre:N&#39;] ).properties( width=500, height=400 ) .",
            "url": "https://heikoheilgendorff.github.io/adh_data_blog/2022/06/08/first_plot.html",
            "relUrl": "/2022/06/08/first_plot.html",
            "date": " • Jun 8, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Plotting the first COVID-19 infections in South Africa",
            "content": ". data_path = &#39;/content/drive/MyDrive/Colab Notebooks/ADH_Data_Blog/data/&#39; . Take a quick look at the data . Province District Subdistrict Date of first known confirmed case in province Date of first known confirmed case in district Date of first known confirmed case in sub-district . 0 EASTERN CAPE | ALFRED NZO | MATATIELE | 2020-03-16 | 2020-04-20 | 2020-05-16 | . 1 EASTERN CAPE | ALFRED NZO | MBIZANA | 2020-03-16 | 2020-04-20 | 2020-05-05 | . 2 EASTERN CAPE | ALFRED NZO | NTABANKULU | 2020-03-16 | 2020-04-20 | 2020-04-20 | . 3 EASTERN CAPE | ALFRED NZO | UMZIMVUBU | 2020-03-16 | 2020-04-20 | 2020-04-30 | . 4 EASTERN CAPE | ALFRED NZO | Unallocated | 2020-03-16 | 2020-04-20 | 2020-04-22 | . &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; height=&quot;24px&quot;viewBox=&quot;0 0 24 24&quot; width=&quot;24px&quot;&gt; &lt;/svg&gt; df[&#39;case&#39;] = 1 df = df.rename(columns={&#39;Date of first known confirmed case in province&#39;:&#39;Prov_date&#39;, &#39;Date of first known confirmed case in district&#39;:&#39;Dist_date&#39;, &#39;Date of first known confirmed case in sub-district&#39;:&#39;Sub_date&#39;}) . gdf = gpd.read_file(&#39;zip://&#39;+data_path+&#39;MDB_Wards_2016-shp.zip&#39;) . gdf = gdf.drop(columns=[&#39;OBJECTID&#39;, &#39;ProvinceCo&#39;,&#39;WardNumber&#39;,&#39;WardID&#39;,&#39;Year&#39;,&#39;Shape__Are&#39;, &#39;Shape__Len&#39;,&#39;DistrictMu&#39;,&#39;LocalMunic&#39;]) gdf = gdf.rename(columns={&#39;ProvinceNa&#39;:&#39;Province&#39;}) . gdf_2 = gdf[[&#39;Province&#39;,&#39;geometry&#39;]] gdf_2 = gdf_2.dissolve(by=&#39;Province&#39;) gdf_2 = gdf_2.simplify(0.01,preserve_topology=False) gdf_4 = gdf.simplify(0.01,preserve_topology=True) gdf[&#39;geometry&#39;] = gdf_4 . def capitalize(gdf,col_name): names = gdf[col_name].to_list() names = [x.upper() for x in names] gdf[col_name] = names return gdf gdf = capitalize(gdf,&#39;District_1&#39;) gdf = capitalize(gdf,&#39;Province&#39;) gdf = capitalize(gdf,&#39;LocalMun_1&#39;) . Date_Name = &#39;Sub_date&#39; #Date_Name = &#39;Dist_date&#39; #Date_Name = &#39;Prov_date&#39; dates = df[Date_Name].drop_duplicates() dates = dates.to_frame() dates = pd.to_datetime(dates[Date_Name]) dates = dates.to_frame() dates = dates.set_index(Date_Name, drop=True) dates = dates.sort_index() dates = dates.reset_index() dates = dates[Date_Name].to_list() def timeplot(x): date = dates[x]#.strftime(&#39;%x&#39;) print(date) date_data = df[df[Date_Name].isin(dates[0:x])] mergetemp=gdf.merge(date_data,how= &#39;left&#39;,left_on=&#39;LocalMun_1&#39;,right_on=&#39;Subdistrict&#39;) mergetemp.case = mergetemp.case.fillna(0) #mergetemp=world.merge(date_data,how= &#39;left&#39;,left_on=&#39;District_1&#39;,right_on=&#39;District&#39;) ax = gdf_2.plot(color=&#39;none&#39;,edgecolor=&#39;black&#39;) mergetemp.plot(ax=ax, column=&#39;case&#39;, #cmap=&#39;cool&#39;, #edgecolor=&#39;black&#39;, figsize=(25,20), legend = False, legend_kwds={&#39;label&#39;: &quot;Areas with Confirmed COVID-19 cases&quot;,&#39;orientation&#39;: &quot;horizontal&quot;}) ax.axis(&#39;off&#39;) #data = timeplot(1,d_EC,g_EC,Date_Name) #timeplot(20,df,gdf,Date_Name) . Interactive Plot . index = (1, len(dates)) interact(timeplot,x = index) . &lt;function __main__.timeplot&gt; . #df = df.drop(columns=[&#39;Prov_date&#39;,&#39;Dist_date&#39;]) merged_data=gdf.merge(df,how= &#39;left&#39;,left_on=&#39;LocalMun_1&#39;,right_on=&#39;Subdistrict&#39;) #merged_data.case = merged_data.case.fillna(0) def timeplot_2(x): date = dates[x]#.strftime(&#39;%x&#39;) print(date) mergetemp = merged_data[merged_data[Date_Name].isin(dates[0:x])] ax = gdf_2.plot(color=&#39;none&#39;,edgecolor=&#39;black&#39;) mergetemp.plot(ax=ax, #column=&#39;case&#39;, color=&#39;red&#39;, #cmap=&#39;Greys&#39;, #edgecolor=&#39;black&#39;, figsize=(25,20), legend = False, legend_kwds={&#39;label&#39;: &quot;Areas with Confirmed COVID-19 cases&quot;,&#39;orientation&#39;: &quot;horizontal&quot;}) ax.axis(&#39;off&#39;) index = (1, len(dates)) interact(timeplot_2,x = index) . &lt;function __main__.timeplot_2&gt; .",
            "url": "https://heikoheilgendorff.github.io/adh_data_blog/jupyter/covid-19/2022/06/07/_covid_first_infections_RSA_tracker.html",
            "relUrl": "/jupyter/covid-19/2022/06/07/_covid_first_infections_RSA_tracker.html",
            "date": " • Jun 7, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://heikoheilgendorff.github.io/adh_data_blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://heikoheilgendorff.github.io/adh_data_blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://heikoheilgendorff.github.io/adh_data_blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://heikoheilgendorff.github.io/adh_data_blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}